# Use a standard Python image (same as dev)
FROM python:3.12-slim-bookworm

# Set environment variables for production
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

WORKDIR /app

# Install system dependencies for ML libraries
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    postgresql-client \
    git \
    # OpenCV dependencies
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxrender1 \
    libxext6 \
    # SVG processing dependencies
    libcairo2-dev \
    pkg-config \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements.txt
COPY requirements.txt /app/

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy project files
COPY . /app/

# Create needed directories for collectstatic even though the actual media files will be in S3
RUN mkdir -p /app/staticfiles

# Collect static files with dummy environment for build
ENV DATABASE_URL=sqlite:///tmp/dummy-db.sqlite3
ENV DJANGO_SETTINGS_MODULE=config.settings.production
ENV SECRET_KEY=build-time-only-secret-key-not-used-in-production
ENV ALLOWED_HOSTS="localhost,127.0.0.1,[::1],toki-pona-ai.fly.dev"
ENV AWS_ACCESS_KEY_ID=build-time-dummy-key
ENV AWS_SECRET_ACCESS_KEY=build-time-dummy-secret
ENV BUCKET_NAME=build-time-dummy-bucket
ENV AWS_REGION=us-east-1
ENV AWS_ENDPOINT_URL_S3=https://dummy-endpoint
ENV REDIS_URL=redis://localhost:6379/0
RUN python manage.py collectstatic --noinput

# Migrations will be run by the release command in fly.toml

# Set up entry point
EXPOSE 8000
ENV DJANGO_SETTINGS_MODULE=config.settings.production
CMD gunicorn config.wsgi:application --bind 0.0.0.0:${PORT:-8000}
