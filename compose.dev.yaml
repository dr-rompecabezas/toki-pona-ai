volumes:
  postgres_data:
  ml_models_data:
  media_data:
  video_data:  # Named volume for sign language videos

services:
  db:
    image: postgres:15
    platform: linux/arm64  # Specify platform to match your host
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=toki_pona_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      # Mount everything except .env file
      - .:/app
      # Use named volumes for media data to persist between container rebuilds
      - media_data:/app/media
      - ml_models_data:/app/media/ml_models
      - video_data:/app/static/videos/lukapona/mp4
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/toki_pona_db
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DEBUG=True
      - SECRET_KEY=dev-key-replace-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      # Video management settings
      - DOWNLOAD_SIGN_VIDEOS=${DOWNLOAD_SIGN_VIDEOS:-true}
      - VIDEO_SOURCE_URL=${VIDEO_SOURCE_URL:-}
      # Optional S3 settings for video download (will be used if provided)
      - USE_S3_STORAGE=${USE_S3_STORAGE:-false}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-}

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: python -m celery -A config worker --loglevel=info
    volumes:
      - .:/app
      - video_data:/app/static/videos/lukapona/mp4
    depends_on:
      - redis
      - db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/toki_pona_db
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DEBUG=True
      - SECRET_KEY=dev-key-replace-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - REDIS_URL=redis://redis:6379/0
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      # Video management settings
      - USE_S3_STORAGE=${USE_S3_STORAGE:-false}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-}
